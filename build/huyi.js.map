{"version":3,"sources":["huyi.js"],"names":[],"mappings":";;;;;;;;IAAO,OAAO,2BAAM,YAAY;;IACvB,WAAW,WAAQ,QAAQ,EAA3B,WAAW;;AAEpB,IAAM,MAAM,GAAG,sDAAsD,CAAC;;IAEhE,IAAI;AACG,WADP,IAAI,CACI,OAAO,EAAE,QAAQ,EAAE;0BAD3B,IAAI;;AAEN,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAI,CAAC,IAAI,GAAG,MAAM,CAAC;GACpB;;eALG,IAAI;AAOR,QAAI;aAAA,cAAC,OAAO,EAAE,EAAE,EAAE;AAChB,YAAI,IAAI,GAAG;AACT,iBAAO,EAAE,IAAI,CAAC,OAAO;AACrB,kBAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,gBAAM,EAAE,OAAO,CAAC,EAAE;AAClB,iBAAO,EAAE,OAAO,CAAC,OAAO;SACzB,CAAC;AACF,eAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,EAAI;AAC7D,cAAI,GAAG,CAAC,KAAK,EAAE;AACb,gBAAI,KAAK,GAAG,IAAI,KAAK,cAAY,MAAM,YAAS,CAAC;AACjD,iBAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC1B,mBAAO,EAAE,CAAC,KAAK,CAAC,CAAC;WAClB;;AAED,qBAAW,CAAC,GAAG,CAAC,IAAI,EAAE;AACpB,wBAAY,EAAE,KAAK;AACnB,yBAAa,EAAE,KAAK;WACrB,EAAE,UAAC,GAAG,EAAE,MAAM,EAAK;AAClB,gBAAI,GAAG,EAAE;AACP,qBAAO,EAAE,CAAC,GAAG,CAAC,CAAC;aAChB;;AAED,gBAAI,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;AACvB,kBAAI,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAClC,mBAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACzC,mBAAK,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;AACrB,qBAAO,EAAE,CAAC,KAAK,CAAC,CAAC;aAClB;;AAED,mBAAO,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;WAC3B,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ;;;;SAvCG,IAAI;;;iBA0CK,IAAI","file":"huyi.js","sourcesContent":["import request from 'superagent';\nimport { parseString } from 'xml2js';\n\nconst apiUrl = 'http://106.ihuyi.cn/webservice/sms.php?method=Submit';\n\nclass HuYi {\n  constructor(account, password) {\n    this.account = account;\n    this.password = password;\n    this.name = 'huyi';\n  }\n\n  send(options, cb) {\n    var data = {\n      account: this.account,\n      password: this.password,\n      mobile: options.to,\n      content: options.content\n    };\n    return request.post(apiUrl).type('form').send(data).end(res => {\n      if (res.error) {\n        let error = new Error(`Request ${apiUrl} error`);\n        error.status = res.status;\n        return cb(error);\n      }\n\n      parseString(res.text, {\n        explicitRoot: false,\n        explicitArray: false\n      }, (err, result) => {\n        if (err) {\n          return cb(err);\n        }\n\n        if (result.code !== '2') {\n          let error = new Error(result.msg);\n          error.status = parseInt(result.code, 10);\n          error.raw = res.text;\n          return cb(error);\n        }\n\n        return cb(null, res.text);\n      });\n    });\n  }\n}\n\nexport default HuYi;"]}